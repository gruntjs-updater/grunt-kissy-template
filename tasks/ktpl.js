/*
 * grunt-kissy-template
 * https://github.com/qipbbn/kissy-template
 *
 * Copyright (c) 2013 maxbbn
 * Licensed under the MIT license.
 */

'use strict';

var minify = require('html-minifier').minify;

module.exports = function(grunt) {

  // Please see the Grunt documentation for more information regarding task
  // creation: http://gruntjs.com/creating-tasks
  var kissyModuleTemplate =
      "/**\n" +
      " * Generated By grunt-ktpl\n" +
      " */\n" +
      "KISSY.add(function(){\n" +
      "  return <%= tpl %>;\n" +
      "});"
  grunt.registerMultiTask('ktpl', 'Your task description goes here.', function() {
    // Merge task-specific and/or target-specific options with these defaults.
    var options = this.options({
      punctuation: ' ',
      separator: ' ',
        minifyOptions: {
            removeComments: true,
            removeCommentsFromCDATA: true,
            removeCDATASectionsFromCDATA: true,
            collapseWhitespace: true,
            collapseBooleanAttributes: true,
            removeAttributeQuotes: true,
            removeEmptyAttributes: true
        }
    });

    // Iterate over all specified file groups.
    this.files.forEach(function(f) {
      // Concat specified files.
      var src = f.src.filter(function(filepath) {
        // Warn on and remove invalid source files (if nonull was set).
        if (!grunt.file.exists(filepath)) {
          grunt.log.warn('Source file "' + filepath + '" not found.');
          return false;
        } else {
          return true;
        }
      }).map(function(filepath) {
        // Read file source.
        return grunt.file.read(filepath);
      }).join(grunt.util.normalizelf(options.separator));

      // Handle options.
      src += options.punctuation;

      var result = minify(src, options.minifyOptions);

      var moduleJS = grunt.template.process(
          kissyModuleTemplate,
          {
              data: {
                  tpl: JSON.stringify({html: result})
              }
          }
      );

      // Write the destination file.
      grunt.file.write(f.dest, moduleJS);

      // Print a success message.
      grunt.log.writeln('File "' + f.dest + '" created.');
    });
  });

};
