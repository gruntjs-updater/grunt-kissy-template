/*
 * grunt-kissy-template
 * https://github.com/qipbbn/kissy-template
 *
 * Copyright (c) 2013 maxbbn
 * Licensed under the MIT license.
 */

'use strict';

var minify = require('html-minifier').minify;

module.exports = function (grunt) {

  // Please see the Grunt documentation for more information regarding task
  // creation: http://gruntjs.com/creating-tasks
  var kissyModuleTemplate =
    "/**\n" +
      " * Generated By grunt-kissy-template\n" +
      " */\n" +
      "KISSY.add(function(){\n" +
      "    return <%= tpl %>;\n" +
      "});"
  grunt.registerMultiTask('ktpl', 'Your task description goes here.', function () {
    // Merge task-specific and/or target-specific options with these defaults.
    var options = this.options({
      minify: {
        removeComments: true,
        removeCommentsFromCDATA: true,
        removeCDATASectionsFromCDATA: true,
        collapseWhitespace: true,
        collapseBooleanAttributes: true,
        removeAttributeQuotes: true,
        removeEmptyAttributes: true
      }
    });

    function kissy_template(src, dest) {
      var result = minify(src, options.minify);

      var moduleJS = grunt.template.process(
        kissyModuleTemplate,
        {
          data: {
            tpl: JSON.stringify({
              html: result
            })
          }
        }
      );

      // Write the destination file.
      grunt.file.write(dest, moduleJS);

      // Print a success message.
      grunt.log.writeln('File "' + dest + '" created.');
    }

    // Iterate over all specified file groups.
    this.files.forEach(function (file) {
      // Concat specified files.
      if (file.dest) {
        //if has dest, concat all src files
        var src = file.src.filter(function (filepath) {
          // Warn on and remove invalid source files (if nonull was set).
          if (!grunt.file.exists(filepath)) {
            grunt.log.warn('Source file "' + filepath + '" not found.');
            return false;
          } else {
            return true;
          }
        }).map(function (filepath) {
            // Read file source.
            return grunt.file.read(filepath);
          }).join(' ');

        kissy_template(src, file.dest);

      } else {
        //else each src html file to js file
        file.src.filter(function (filepath) {
          // Warn on and remove invalid source files (if nonull was set).
          if (!grunt.file.exists(filepath)) {
            grunt.log.warn('Source file "' + filepath + '" not found.');
            return false;
          } else {
            return true;
          }
        }).forEach(function(filepath){
            var src = grunt.file.read(filepath);
            // extname to js
            var dest = filepath.replace(/\.([^.]*)$/, '.js');
            kissy_template(src, dest);
          });
      }
    });
  });

};
